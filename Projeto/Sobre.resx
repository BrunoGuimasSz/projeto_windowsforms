<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>